{"version":3,"sources":["Pages/Options.js","Components/Controles.js","Components/Display.js","Components/Clock.js","Pages/Timer.js","App.js","serviceWorker.js","index.js"],"names":["Options","useState","reps","setReps","h","setH","r","setR","rr","setRr","rrDisplay","setRRDisplay","noSleep","NoSleep","useEffect","d","Number","m","Math","floor","s","secondsToHms","className","onMouseOver","e","document","addEventListener","enableNoSleep","removeEventListener","enable","onClick","to","type","Controles","toggle","setToggle","myRef","console","log","current","api","start","pause","Display","sets","total","minutes","seconds","j","rounds","i","divStyle","animation","join","undefined","style","Clock","time","map","Completionist","date","Date","now","zeroPadTime","renderer","ref","React","createRef","hours","completed","Timer","location","setMap","setRounds","queryString","parse","search","App","path","exact","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c4dea329.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport NoSleep from 'nosleep.js';\n\n import './Page.css';\n\n\nconst Options = () => {\n  const [reps, setReps] = useState(3);\n  const [h, setH] = useState(7);\n  const [r, setR] = useState(3);\n  const [rr, setRr] = useState(120);\n  const [rrDisplay, setRRDisplay] = useState(120);\n  var noSleep = new NoSleep();\n\n  useEffect(() => {\n    setRRDisplay(secondsToHms(rr))\n  }, [rr]);\n\n  function secondsToHms(d) {\n      d = Number(d);\n      var m = Math.floor(d % 3600 / 60);\n      var s = Math.floor(d % 3600 % 60);\n      var mDisplay = m > 0 ? m + \":\" : \"\";\n      var sDisplay = s > 0 ? s  : \"00\";\n      return  mDisplay + sDisplay;\n  }\n  function clickEvent(e){\n      document.addEventListener('click', function enableNoSleep() {\n        document.removeEventListener('click', enableNoSleep, false);\n        noSleep.enable();\n      }, false);\n  }\n\n  return (\n    <div className=\"form-wrapper\" onMouseOver={(e)=>clickEvent(e)}>\n        <h1>Simple Hangs</h1>\n      <div >\n      <h4>Reps</h4>\n        <div className=\"number-wrapper\">\n          <div onClick={()=>{ setReps(reps-1) } } className=\"btn incr\">\n          <p>{\"\\u2212\"}</p>\n          </div>\n          <div className=\"number-status\">\n          {reps}\n          </div>\n          <div onClick={()=>{ setReps(reps+1) } } className=\"btn incr\">\n          <p>{'\\u002B'}</p>\n          </div>\n\n        </div>\n\n          <h4>Hang Time (seconds)</h4>\n        <div className=\"number-wrapper\">\n          <div onClick={()=>{ setH(h-1) } } className=\"btn incr\">\n            <p>{\"\\u2212\"}</p>\n          </div>\n          <div className=\"number-status\">\n          {h}\n          </div>\n          <div onClick={()=>{ setH(h+1) } } className=\"btn incr\">\n          <p>{'\\u002B'}</p>\n          </div>\n        </div>\n\n          <h4>Off Time (seconds)</h4>\n        <div className=\"number-wrapper\">\n          <div onClick={()=>{ setR(r-1) } } className=\"btn incr\">\n            <p>{\"\\u2212\"}</p>\n          </div>\n          <div className=\"number-status\">\n          {r}\n          </div>\n          <div onClick={()=>{ setR(r+1) } } className=\"btn incr\">\n          <p>{'\\u002B'}</p>\n          </div>\n        </div>\n\n          <h4>Rest Time</h4>\n        <div className=\"number-wrapper\">\n          <div onClick={()=>{ setRr(rr-30) } } className=\"btn incr\">\n            <p>{\"\\u2212\"}</p>\n          </div>\n          <div className=\"number-status\">\n          {rrDisplay}\n          </div>\n          <div onClick={()=>{ setRr(rr+30) } } className=\"btn incr\">\n          <p>{'\\u002B'}</p>\n          </div>\n        </div>\n\n\n\n    </div>\n\n\n\n    <Link to={`/timer?reps=${reps}&h=${h}&r=${r}&rr=${rr}`}>\n            <div className='sqr-btn' type=\"submit\">Start Hangs</div>\n    </Link>\n    </div>\n  );\n}\n\nexport default Options;\n","import React, { useState, useEffect } from \"react\";\n\n// import './Components.css';\n\nconst Controles = ({toggle,setToggle, myRef}) => {\n const pause=()=>{\n    console.log(myRef)\n    myRef.current.api.pause()\n    setToggle(!toggle)\n  }\n  const play=()=>{\n    console.log(myRef)\n    myRef.current.api.start()\n    setToggle(!toggle)\n  }\nreturn (\n  <div className=\"controles\">\n      {toggle?\n      <div className=\"sqr-btn\" onClick={()=>play()}>Play</div>\n      :\n      <div className=\"sqr-btn\" onClick={()=>pause()}>Pause</div>\n      }\n    </div>\n  );\n}\n\nexport default Controles;\n","import React, { useState, useEffect } from \"react\";\n\n// import './Components.css';\nimport Controles from './Controles';\n\n\nconst Display = ({ sets,total, minutes,seconds,j,rounds,myRef,i}) => {\n  const [toggle, setToggle] = useState(false);\n  const divStyle = {\n  animation: 'grow '+ total+'s infinite',\n};\n  return (\n    <div className=\"display-wrapper\" >\n      <div className=\"score\">{j}/{rounds} Reps</div>\n      <div className={['numbers-wrapper', 'stage-'+i].join(' ')}>\n\n        { minutes==undefined ?\n          <div className=\"numbers\" >{seconds} </div>\n        :\n        <div className=\"numbers\"> {minutes}:{seconds}</div>\n       }\n       <div  className={!toggle?\"circle\":\"circle paused\"} style={divStyle}></div>\n\n      </div>\n      <div className=\"sets\">{sets} Sets</div>\n      { i!=-1&&\n         <Controles toggle={toggle} setToggle={setToggle} myRef={myRef} i={i}/>\n       }\n  </div>\n  );\n}\n\nexport default Display;\n","import React, { useState, useEffect } from \"react\";\nimport Countdown from 'react-countdown';\n\n import './Components.css';\n\nimport Display from './Display';\n\n\nconst Clock = ({time,map,rounds}) => {\n  const [toggle, setToggle] = useState(false);\n\n    var i=-1\n    var j=1\n    var sets=0\n\nconst Completionist = () =>   {\n  if(i==1&&j<rounds){\n    console.log(j,rounds)\n    // setJ(j+1)\n    j++\n    i=-1\n  }\n  else if(i==2){\n    // setJ(1)\n    sets++\n    j=1\n    i=-1\n  }\n  i++\n   return <Countdown date={Date.now() + map[i]*1000} zeroPadTime={1} renderer={renderer}   ref={myRef}/>\n\n }\n\nvar myRef = React.createRef();\n\nconst renderer = ({hours, minutes, seconds, completed }) => {\n  if (completed)\n        return <Completionist />;\n  else {\n    // Render a countdown\n    if(minutes>0)\n    return <Display sets={sets} total={map[i]} toggle={toggle} minutes={minutes} seconds={seconds} j={j} rounds={rounds} myRef={myRef} i={i}/>;\n\n    else\n      return <Display sets={sets} total={map[i]} toggle={toggle} seconds={seconds} j={j} rounds={rounds} myRef={myRef} i={i}/>;\n  }\n};\n\n  return (\n    <div className=\"inner-app-wrapper\">\n\n    <Countdown\n    date={Date.now() + 5000}\n    renderer={renderer}/>\n  </div>\n\n  );\n}\n\nexport default Clock;\n","import React, { useState, useEffect } from \"react\";\nimport queryString from 'query-string';\n\n// import './Components.css';\nimport Clock from '../Components/Clock';\nimport NoSleep from 'nosleep.js';\n\n\nconst Timer = ({location}) => {\n  const [map, setMap]=useState([])\n  const [rounds, setRounds] = useState(0);\n  var noSleep = new NoSleep();\n\n\n  useEffect(() => {\n    const { reps,h,r,rr} = queryString.parse(location.search);\n    setMap([...map,h,r,rr])\n    setRounds(reps)\n  }, [location.search]);\nconsole.log(map)\nfunction clickEvent(e){\n    document.addEventListener('click', function enableNoSleep() {\n      document.removeEventListener('click', enableNoSleep, false);\n      noSleep.enable();\n    }, false);\n}\n  return (\n    <div className= \"app-wrapper\" onMouseOver={(e)=>clickEvent(e)}>\n        <h1>Simple Hangs</h1>\n    <Clock  map={map} rounds={rounds}/>\n    </div>\n  );\n}\n\nexport default Timer;\n","import React from 'react';\n\nimport Options from './Pages/Options';\nimport Timer from './Pages/Timer';\n\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n\n    <Router>\n    <Route path=\"/simplehanges\" exact component={Options} />\n    <Route path=\"/Timer\" component={Timer}/>\n  </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}