{"version":3,"sources":["Components/sounds/sound0.wav","Components/sounds/sound1.wav","Components/sounds/sound2.wav","Pages/Options.js","Components/Controles.js","Components/Display.js","Components/Repeaters.js","Pages/Timer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Options","useState","reps","setReps","h","setH","r","setR","rr","setRr","rrDisplay","setRRDisplay","noSleep","NoSleep","useEffect","d","Number","m","Math","floor","s","secondsToHms","className","onMouseOver","e","document","addEventListener","enableNoSleep","removeEventListener","enable","onClick","to","type","Controles","toggle","setToggle","displayRef","console","log","current","api","start","pause","Display","mute","sets","setMute","total","minutes","seconds","j","rounds","i","sound","s0","s1","s2","Audio","audio","playing","setPlaying","divStyle","animation","play","join","undefined","style","Repeaters","time","map","React","createRef","Completionist","memo","date","Date","now","zeroPadTime","renderer","ref","hours","completed","class","Timer","location","setMap","setRounds","queryString","parse","search","App","path","exact","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"8FAAAA,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,uNCwG5BC,G,MAjGC,WAAO,IAAD,EACIC,mBAAS,GADb,mBACbC,EADa,KACPC,EADO,OAEFF,mBAAS,GAFP,mBAEbG,EAFa,KAEVC,EAFU,OAGFJ,mBAAS,GAHP,mBAGbK,EAHa,KAGVC,EAHU,OAIAN,mBAAS,KAJT,mBAIbO,EAJa,KAITC,EAJS,OAKcR,mBAAS,KALvB,mBAKbS,EALa,KAKFC,EALE,KAMhBC,EAAU,IAAIC,IAqBlB,OAnBAC,qBAAU,WACRH,EAGF,SAAsBI,GAClBA,EAAIC,OAAOD,GACX,IAAIE,EAAIC,KAAKC,MAAMJ,EAAI,KAAO,IAC1BK,EAAIF,KAAKC,MAAMJ,EAAI,KAAO,IAG9B,OAFeE,EAAI,EAAIA,EAAI,IAAM,KAClBG,EAAI,EAAIA,EAAK,MARjBC,CAAab,MACzB,CAACA,IAkBF,yBAAKc,UAAU,eAAeC,YAAa,SAACC,GAP1CC,SAASC,iBAAiB,SAAS,SAASC,IAC1CF,SAASG,oBAAoB,QAASD,GAAe,GACrDf,EAAQiB,YACP,KAKD,4CACF,6BACA,oCACE,yBAAKP,UAAU,kBACb,yBAAKQ,QAAS,WAAM5B,EAAK,GAAIC,EAAQD,EAAK,IAAOoB,UAAU,YAC3D,2BAAI,WAEJ,yBAAKA,UAAU,iBACdpB,GAED,yBAAK4B,QAAS,WAAM3B,EAAQD,EAAK,IAAOoB,UAAU,YAClD,2BAAI,OAKJ,mDACF,yBAAKA,UAAU,kBACb,yBAAKQ,QAAS,WAAK1B,EAAE,GAAMC,EAAKD,EAAE,IAAOkB,UAAU,YACjD,2BAAI,WAEN,yBAAKA,UAAU,iBACdlB,GAED,yBAAK0B,QAAS,WAAMzB,EAAKD,EAAE,IAAOkB,UAAU,YAC5C,2BAAI,OAIJ,kDACF,yBAAKA,UAAU,kBACb,yBAAKQ,QAAS,WAAKxB,EAAE,GAAKC,EAAKD,EAAE,IAAOgB,UAAU,YAChD,2BAAI,WAEN,yBAAKA,UAAU,iBACdhB,GAED,yBAAKwB,QAAS,WAAKvB,EAAKD,EAAE,IAAOgB,UAAU,YAC3C,2BAAI,OAIJ,yCACF,yBAAKA,UAAU,kBACb,yBAAKQ,QAAS,WAAKtB,EAAG,IAAKC,EAAMD,EAAG,KAAQc,UAAU,YACpD,2BAAI,WAEN,yBAAKA,UAAU,iBACdZ,GAED,yBAAKoB,QAAS,WAAKtB,EAAG,MAAOC,EAAMD,EAAG,KAAQc,UAAU,YACxD,2BAAI,QAUV,kBAAC,IAAD,CAAMS,GAAE,sBAAiB7B,EAAjB,cAA2BE,EAA3B,cAAkCE,EAAlC,eAA0CE,IAC1C,yBAAKc,UAAU,UAAUU,KAAK,UAA9B,mB,iCCtEGC,G,MAxBG,SAAC,GAAoC,IAAnCC,EAAkC,EAAlCA,OAAOC,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,WAYtC,OACE,yBAAKd,UAAU,aACVY,EACD,yBAAKZ,UAAU,UAAUQ,QAAS,kBAPpCO,QAAQC,IAAIF,GACZA,EAAWG,QAAQC,IAAIC,aACvBN,GAAWD,KAKT,QAEA,yBAAKZ,UAAU,UAAUQ,QAAS,kBAdpCO,QAAQC,IAAIF,GACZA,EAAWG,QAAQC,IAAIE,aACvBP,GAAWD,KAYT,Y,mDCsCSS,EAlDC,SAAC,GAAyE,IAAvEC,EAAsE,EAAtEA,KAAeC,GAAuD,EAAhEC,QAAgE,EAAvDD,MAAKE,EAAkD,EAAlDA,MAAOC,EAA2C,EAA3CA,QAAQC,EAAmC,EAAnCA,QAAQC,EAA2B,EAA3BA,EAAEC,EAAyB,EAAzBA,OAAOf,EAAkB,EAAlBA,WAAWgB,EAAO,EAAPA,EAC5EC,EAAM,CAACC,IAAGC,IAAGC,KADsE,EAG3DvD,oBAAS,GAHkD,mBAGhFiC,EAHgF,KAGxEC,EAHwE,OAIrDlC,mBAAS2C,GAJ4C,gCAKvE3C,mBAAS,IAAIwD,MAAMJ,EAAMD,MAAlCM,EALgF,sBAMzDzD,oBAAS,GANgD,mBAMhF0D,EANgF,KAMvEC,EANuE,KAOjFC,EAAW,CACjBC,UAAW,QAASf,EAAM,cAiB1B,OAdFjC,qBAAU,WACL6C,IAAUf,EAAOc,EAAMK,OAASL,EAAMhB,UAExC,CAACiB,IAIH7C,qBAAU,WAER,OADA4C,EAAMhC,iBAAiB,SAAS,kBAAMkC,GAAW,MAC1C,WACLF,EAAM9B,oBAAoB,SAAS,kBAAMgC,GAAW,SAErD,IAGA,yBAAKtC,UAAU,mBAEb,yBAAKA,UAAU,SAAS4B,EAAxB,IAA4BC,EAA5B,SACA,yBAAK7B,UAAW,CAAC,kBAAmB,SAAS8B,GAAGY,KAAK,WAExCC,GAATjB,EACA,yBAAK1B,UAAU,WAAY2B,EAA3B,KAEFA,EAAQ,GAAK,yBAAK3B,UAAU,WAAf,IAA2B0B,EAA3B,IAAqCC,GAElD,yBAAK3B,UAAU,WAAf,IAA2B0B,EAA3B,KAAsCC,GAEvC,yBAAM3B,UAAYY,EAAgB,gBAAT,SAA0BgC,MAAOL,KAG3D,yBAAKvC,UAAU,QAAf,QAA4BuB,EAA5B,MACM,GAAJO,GACC,kBAAC,EAAD,CAAWlB,OAAQA,EAAQC,UAAWA,EAAWC,WAAYA,MCoBvD+B,EAhEG,SAAC,GAAsB,EAArBC,KAAsB,IAAjBC,EAAgB,EAAhBA,IAAIlB,EAAY,EAAZA,OAAY,EACXlD,oBAAS,GADE,mBAChCiC,EADgC,KAGnCE,GAHmC,KAGtBkC,IAAMC,aACnBnB,GAAG,EACHF,EAAE,EACFL,EAAK,EACLD,GAAK,EACT9B,qBAAU,WACNuB,QAAQC,IAAI,iBAIfxB,qBAAU,WACNuB,QAAQC,IAAI,oBAAoBM,KAC/B,CAACA,IAGT,IAAM4B,EAAgBF,IAAMG,MAAK,WAW9B,OAVK,GAAHrB,GAAMF,EAAEC,GACTD,IACAE,GAAG,GAEM,GAAHA,IACNP,IACAK,EAAE,EACFE,GAAG,GAELA,IACQ,kBAAC,IAAD,CAAWsB,KAAMC,KAAKC,MAAe,IAAPP,EAAIjB,GAASyB,YAAa,EAAGC,SAAUA,EAAYC,IAAK3C,OAK1F0C,EAAW,SAAC,GAA0C,EAAzCE,MAA0C,IAAnChC,EAAkC,EAAlCA,QAASC,EAAyB,EAAzBA,QACjC,OAD0D,EAAhBgC,UAE7B,kBAACT,EAAD,MAGRxB,EAAQ,EACJ,kBAAC,EAAD,CAASJ,KAAMA,EAAMC,KAAMA,EAAME,MAAOsB,EAAIjB,GAAIlB,OAAQA,EAAQc,QAASA,EAASC,QAASA,EAASC,EAAGA,EAAGC,OAAQA,EAAQf,WAAYA,EAAYgB,EAAGA,IAEnJ,kBAAC,EAAD,CAASR,KAAMA,EAAMC,KAAMA,EAAME,MAAOsB,EAAIjB,GAAIlB,OAAQA,EAAQe,QAASA,EAASC,EAAGA,EAAGC,OAAQA,EAAQf,WAAYA,EAAYgB,EAAGA,KAI9I,OACE,yBAAK9B,UAAU,qBACf,2BAAO4D,MAAM,mBAEX,2BAAOlD,KAAK,WAAWF,QAAS,kBAAIc,GAAMA,KACxC,uBAAGsC,MAAM,4CACT,uBAAGA,MAAM,0CAEb,kBAAC,IAAD,CACAR,KAAMC,KAAKC,MAAQ,IACnBE,SAAUA,MC9BCK,EA1BD,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAAc,EACRnF,mBAAS,IADD,mBACrBoE,EADqB,KAChBgB,EADgB,OAEApF,mBAAS,GAFT,mBAErBkD,EAFqB,KAEbmC,EAFa,KAGxB1E,EAAU,IAAIC,IAelB,OAZAC,qBAAU,WAAO,IAAD,EACSyE,IAAYC,MAAMJ,EAASK,QAA1CvF,EADM,EACNA,KAAKE,EADC,EACDA,EAAEE,EADD,EACCA,EAAEE,EADH,EACGA,GACjB6E,EAAO,GAAD,mBAAKhB,GAAL,CAASjE,EAAEE,EAAEE,KACnB8E,EAAUpF,KACT,CAACkF,EAASK,SACfpD,QAAQC,IAAI+B,GAQR,yBAAK/C,UAAW,cAAcC,YAAa,SAACC,GAN5CC,SAASC,iBAAiB,SAAS,SAASC,IAC1CF,SAASG,oBAAoB,QAASD,GAAe,GACrDf,EAAQiB,YACP,KAIC,4CACJ,kBAAC,EAAD,CAAYwC,IAAKA,EAAKlB,OAAQA,M,OCZnBuC,MAVf,WACE,OAEE,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAOC,KAAK,gBAAgBC,OAAK,EAACC,UAAW7F,IAC7C,kBAAC,IAAD,CAAO2F,KAAK,SAASE,UAAWV,MCAhBW,QACW,cAA7BC,OAAOX,SAASY,UAEe,UAA7BD,OAAOX,SAASY,UAEhBD,OAAOX,SAASY,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF3E,SAAS4E,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLxE,QAAQwE,MAAMA,EAAMC,c","file":"static/js/main.5be4df9e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sound0.592c952c.wav\";","module.exports = __webpack_public_path__ + \"static/media/sound1.407dd356.wav\";","module.exports = __webpack_public_path__ + \"static/media/sound2.9388ff7c.wav\";","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport NoSleep from 'nosleep.js';\n\n import './Page.css';\n\n\nconst Options = () => {\n  const [reps, setReps] = useState(3);\n  const [h, setH] = useState(7);\n  const [r, setR] = useState(3);\n  const [rr, setRr] = useState(120);\n  const [rrDisplay, setRRDisplay] = useState(120);\n  var noSleep = new NoSleep();\n\n  useEffect(() => {\n    setRRDisplay(secondsToHms(rr))\n  }, [rr]);\n\n  function secondsToHms(d) {\n      d = Number(d);\n      var m = Math.floor(d % 3600 / 60);\n      var s = Math.floor(d % 3600 % 60);\n      var mDisplay = m > 0 ? m + \":\" : \"\";\n      var sDisplay = s > 0 ? s  : \"00\";\n      return  mDisplay + sDisplay;\n  }\n  function clickEvent(e){\n      document.addEventListener('click', function enableNoSleep() {\n        document.removeEventListener('click', enableNoSleep, false);\n        noSleep.enable();\n      }, false);\n  }\n\n  return (\n    <div className=\"form-wrapper\" onMouseOver={(e)=>clickEvent(e)}>\n        <h1>Simple Hangs</h1>\n      <div >\n      <h4>Reps</h4>\n        <div className=\"number-wrapper\">\n          <div onClick={()=>{ reps>1&& setReps(reps-1) } } className=\"btn incr\">\n          <p>{\"\\u2212\"}</p>\n          </div>\n          <div className=\"number-status\">\n          {reps}\n          </div>\n          <div onClick={()=>{ setReps(reps+1) } } className=\"btn incr\">\n          <p>{'\\u002B'}</p>\n          </div>\n\n        </div>\n\n          <h4>Hang Time (seconds)</h4>\n        <div className=\"number-wrapper\">\n          <div onClick={()=>{h>1 &&  setH(h-1) } } className=\"btn incr\">\n            <p>{\"\\u2212\"}</p>\n          </div>\n          <div className=\"number-status\">\n          {h}\n          </div>\n          <div onClick={()=>{ setH(h+1) } } className=\"btn incr\">\n          <p>{'\\u002B'}</p>\n          </div>\n        </div>\n\n          <h4>Off Time (seconds)</h4>\n        <div className=\"number-wrapper\">\n          <div onClick={()=>{r>1&&  setR(r-1) } } className=\"btn incr\">\n            <p>{\"\\u2212\"}</p>\n          </div>\n          <div className=\"number-status\">\n          {r}\n          </div>\n          <div onClick={()=>{setR(r+1) } } className=\"btn incr\">\n          <p>{'\\u002B'}</p>\n          </div>\n        </div>\n\n          <h4>Rest Time</h4>\n        <div className=\"number-wrapper\">\n          <div onClick={()=>{rr>30&& setRr(rr-30) } } className=\"btn incr\">\n            <p>{\"\\u2212\"}</p>\n          </div>\n          <div className=\"number-status\">\n          {rrDisplay}\n          </div>\n          <div onClick={()=>{rr<1200&& setRr(rr+30) } } className=\"btn incr\">\n          <p>{'\\u002B'}</p>\n          </div>\n        </div>\n\n\n\n    </div>\n\n\n\n    <Link to={`/timer?reps=${reps}&h=${h}&r=${r}&rr=${rr}`}>\n            <div className='sqr-btn' type=\"submit\">Start Hangs</div>\n    </Link>\n    </div>\n  );\n}\n\nexport default Options;\n","import React, { useState, useEffect } from \"react\";\n\n// import './Components.css';\n\nconst Controles = ({toggle,setToggle, displayRef}) => {\n\n const pause=()=>{\n    console.log(displayRef)\n    displayRef.current.api.pause()\n    setToggle(!toggle)\n  }\n  const play=()=>{\n    console.log(displayRef)\n    displayRef.current.api.start()\n    setToggle(!toggle)\n  }\nreturn (\n  <div className=\"controles\">\n      {toggle?\n      <div className=\"sqr-btn\" onClick={()=>play()}>Play</div>\n      :\n      <div className=\"sqr-btn\" onClick={()=>pause()}>Pause</div>\n      }\n\n    </div>\n  );\n}\n\nexport default Controles;\n","import React, { useState, useEffect } from \"react\";\n\n// import './Components.css';\nimport Controles from './Controles';\nimport s2 from './sounds/sound0.wav';\nimport s1 from './sounds/sound1.wav';\nimport s0 from './sounds/sound2.wav';\n\n\nconst Display = ({ mute, setMute, sets,total, minutes,seconds,j,rounds,displayRef,i}) => {\n  var sound=[s0,s1,s2]\n\n  const [toggle, setToggle] = useState(false);\n  const [childMute, setChildMute] = useState(mute);\n  const [audio] = useState(new Audio(sound[i]));\n  const [playing, setPlaying] = useState(true);\n  const divStyle = {\n  animation: 'grow '+ total+'s infinite',\n};\n\nuseEffect(() => {\n     playing&&!mute ? audio.play() : audio.pause();\n   },\n   [playing]\n );\n\n\n useEffect(() => {\n   audio.addEventListener('ended', () => setPlaying(false));\n   return () => {\n     audio.removeEventListener('ended', () => setPlaying(false));\n   };\n }, []);\n\n  return (\n    <div className=\"display-wrapper\" >\n\n      <div className=\"score\">{j}/{rounds} Reps</div>\n      <div className={['numbers-wrapper', 'stage-'+i].join(' ')}>\n\n        { minutes==undefined ?\n          <div className=\"numbers\" >{seconds} </div>\n        :\n        seconds>10?  <div className=\"numbers\"> {minutes}:{seconds}</div>\n        :\n        <div className=\"numbers\"> {minutes}:0{seconds}</div>\n       }\n       <div  className={!toggle?\"circle\":\"circle paused\"} style={divStyle}></div>\n\n      </div>\n      <div className=\"sets\">Set #{sets} </div>\n      { i!=-1&&\n         <Controles toggle={toggle} setToggle={setToggle} displayRef={displayRef}\n/>\n       }\n  </div>\n  );\n}\n\nexport default Display;\n","import React, { useState, useEffect } from \"react\";\nimport Countdown from 'react-countdown';\n\n import './Components.css';\n\nimport Display from './Display';\n\n\nconst Repeaters = ({time,map,rounds}) => {\n  const [toggle, setToggle] = useState(false);\n  // const [mute, setMute] = useState(true);\n  var displayRef = React.createRef();\n  var i=-1\n  var j=1\n  var sets=1\n  var mute=true\n  useEffect(() => {\n      console.log(\"rep render\")\n     }\n   );\n\n   useEffect(() => {\n       console.log(\"mute has changed \"+mute)\n      },[mute]\n    );\n\nconst Completionist = React.memo(() =>   {\n  if(i==1&&j<rounds){\n    j++\n    i=-1\n  }\n  else if(i==2){\n    sets++\n    j=1\n    i=-1\n  }\n  i++\n   return <Countdown date={Date.now() + map[i]*1000} zeroPadTime={1} renderer={renderer}   ref={displayRef}/>\n\n })\n\n\nconst renderer = ({hours, minutes, seconds, completed }) => {\n  if (completed)\n        return <Completionist />;\n  else {\n    // Render a countdown\n    if(minutes>0)\n    return <Display mute={mute} sets={sets} total={map[i]} toggle={toggle} minutes={minutes} seconds={seconds} j={j} rounds={rounds} displayRef={displayRef} i={i}/>;\n    else\n      return <Display mute={mute} sets={sets} total={map[i]} toggle={toggle} seconds={seconds} j={j} rounds={rounds} displayRef={displayRef} i={i}/>;\n  }\n};\n\n  return (\n    <div className=\"inner-app-wrapper\">\n    <label class=\"volume-checkbox\">\n\n      <input type=\"checkbox\" onClick={()=>mute=!mute}/>\n        <i class=\"fa fa-fw fa-volume-mute fa-3x unchecked\"></i>\n        <i class=\"fa fa-fw fa-volume-up  fa-3x checked\"></i>\n    </label>\n    <Countdown\n    date={Date.now() + 5000}\n    renderer={renderer}/>\n\n\n  </div>\n\n  );\n}\n\nexport default Repeaters;\n","import React, { useState, useEffect } from \"react\";\nimport queryString from 'query-string';\n\n// import './Components.css';\nimport Repeaters from '../Components/Repeaters';\nimport NoSleep from 'nosleep.js';\n\n\nconst Timer = ({location}) => {\n  const [map, setMap]=useState([])\n  const [rounds, setRounds] = useState(0);\n  var noSleep = new NoSleep();\n\n\n  useEffect(() => {\n    const { reps,h,r,rr} = queryString.parse(location.search);\n    setMap([...map,h,r,rr])\n    setRounds(reps)\n  }, [location.search]);\nconsole.log(map)\nfunction clickEvent(e){\n    document.addEventListener('click', function enableNoSleep() {\n      document.removeEventListener('click', enableNoSleep, false);\n      noSleep.enable();\n    }, false);\n}\n  return (\n    <div className= \"app-wrapper\" onMouseOver={(e)=>clickEvent(e)}>\n        <h1>Simple Hangs</h1>\n    <Repeaters  map={map} rounds={rounds}/>\n    </div>\n  );\n}\n\nexport default Timer;\n","import React from 'react';\n\nimport Options from './Pages/Options';\nimport Timer from './Pages/Timer';\n\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n\n    <Router>\n    <Route path=\"/simplehanges\" exact component={Options} />\n    <Route path=\"/Timer\" component={Timer}/>\n  </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}